// EXERCISE:
// You can write all the code natively (for cycles and such) or you can use some advanced functions which JS arrays provides in case you see them fit
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array
// There can be multiple solutions to each task, solve it as you see fit.
// You will work with array `numbers` which will be generated by code (code below) in every task.
// Write these functions:

// This block generates array with random length with values between 1-100
let numbers = [];
const length = Math.ceil(Math.random() * 10) + 5;
for (let i = 0; i < length; i = i + 1) {
    numbers.push(Math.ceil(Math.random() * 100));
}

// a) Function which will print to console a whole array
const printArray = (numbers) => {
    // Your code:

};

// b) Function which will print to console the length of array
const printLength = (numbers) => {
    // Your code:

};

// c) Function which will print to console the first element of array
const printFirstItem = (numbers) => {
    // Your code:

};

// d) Function which will print to console the last element
const printLastItem = (numbers) => {
    // Your code:

};

// e) Function which will print to console the largest number (You can check Math functions)
const printLargestItem = (numbers) => {
    // Your code:

};

// f) Function which will print to console the smallest number (You can check Math functions)
const printSmallestItem = (numbers) => {
    // Your code:

};

// g) Function which will print to console the sum of all numbers in array (You can check reduce function)
const printSum = (numbers) => {
    // Your code:

};

// Tasks for cycles


// 1 =================================
// Create a function that takes two numbers as arguments (num, length) and returns an array of multiples of num until the array length reaches length.
// Examples
// arrayOfMultiples(7, 5) ➞ [7, 14, 21, 28, 35]
// arrayOfMultiples(12, 10) ➞ [12, 24, 36, 48, 60, 72, 84, 96, 108, 120]
// arrayOfMultiples(17, 6) ➞ [17, 34, 51, 68, 85, 102]

// Your code:
const arrayOfMultiples = (num, length) => {
    // ... write code ...
};

// 2 =================================
// Change direction of array
// TIP: Check if there is function which can help you https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array
// Example:
// changeDirection([0, 1, 2, 3]) ➞ [3, 2, 1, 0]
// changeDirection([]) ➞ []
// changeDirection([1, 2]) ➞ [2, 1]

// Your code:
const changeDirection = (array) => {
    // ... write code ...
};

// 3 =================================
// Create function that takes two arrays and return object with two keys - bigger array, sum all numbers
// Examples
// biggerArray([1,2,3,4,5], [50,50]) ➞ { array: [50,50], sum: 100 }
// biggerArray([1,2,3], [2,3,4]) ➞ { array: [2,3,4], sum: 9 }

// Your code:
const biggerArray = (array1, array2) => {
    // ... write code ...
};